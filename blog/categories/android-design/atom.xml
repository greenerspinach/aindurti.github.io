<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Android Design | Akhil Indurti]]></title>
  <link href="http://aindurti.github.io/blog/categories/android-design/atom.xml" rel="self"/>
  <link href="http://aindurti.github.io/"/>
  <updated>2014-06-28T23:19:17-07:00</updated>
  <id>http://aindurti.github.io/</id>
  <author>
    <name><![CDATA[Akhil Indurti]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Pencil it In Part 3: Mockups and Project Plan]]></title>
    <link href="http://aindurti.github.io/blog/2014/05/20/pencil-it-in-mockups-and-project-plan/"/>
    <updated>2014-05-20T11:31:20-07:00</updated>
    <id>http://aindurti.github.io/blog/2014/05/20/pencil-it-in-mockups-and-project-plan</id>
    <content type="html"><![CDATA[<p>In the last article, we discussed my inspirations, such as iStudiez Pro and Google Now, in the design of the app. I also showed you my initial approach and wireframes for it. We learned that an app that simplifies the achievement of specific goals should focus on the details as well, delighting and surprising the user for the right information when he or she needs it. This post will further go into the progress of development by taking a look at the mockups I&rsquo;ve made over a few design iterations. Finally, I will give you my insight into how I will plan this project with <a href="http://37signals.com/">37signals'</a> idea of <a href="http://feltpresence.com/articles/16-managing-product-development-by-integrating-around-concerns">Managing Product Development by Integrating Around Concerns</a>.</p>

<!-- more -->


<p>Here is a storyboard I put together from some of the screens from the wireframes. As you can see, the mockups don&rsquo;t differ much from the wireframes. However, I did add an empty state to the design, because I felt that the user would need to be greeted with a meaningful post-install screen. There is also a form screen to show you what kind of forms I&rsquo;d be providing, for the worst case where the user actually has to give manual input.</p>

<p><img class="center" src="/images/storyboard.png"></p>

<p>Note that these higher-fidelity mockups exist to more easily portray a story in a person&rsquo;s head. By leaving all of the clutter of paper wireframes behind, these let the viewer digest the app better. A story is just as, if not more important than features. If you can convince someone that your app solves for a specific use case, you can more easily convince them to use your app.</p>

<h2>The Plan</h2>


<p>Designing a project plan for this app was tricky, until I came across a methodology defined by Ryan Singer, a designer and product manager at Basecamp. Obviously, I came about this whole process the wrong way since I should&rsquo;ve decided on a practice first before I went in and started designing the app. But since I did not know about this process beforehand, I had to adapt my plan to include my already completed designs.</p>

<p>As the idea puts it, using individual, vertically integrated scopes of work is a good way to go. But what does that mean, exactly? You can read more about it in Singer&rsquo;s <a href="http://feltpresence.com/articles/16-managing-product-development-by-integrating-around-concerns">post</a> and watch a <a href="http://vimeo.com/68342874">video</a> about it. I highly recommend looking at his content on this topic at <a href="http://feltpresence.com/">feltpresence.com</a>. As Singer starts off, the <em>individual</em> implies separation based on different features or parts of your application, rather than thinking of the entire app as just one big <em>scope</em>, or <em>feature</em>.</p>

<p>Each separate scope is made up of different parts such as the <b>User Interface</b> (this could either be what the user sees/interacts with or the methods of an API), <b>Application Code</b> (the front-end/back-end code for your application that uses different frameworks to create complex apps), <b>Frameworks</b> (focuses infrastructure code to accomplish goals, such as libraries), and <b>Infrastructure</b> (the basic services a platform provides). Finally, the <em>vertically integrated</em> part refers to how the different scopes interact with each other. You&rsquo;ll notice that certain scopes require parts of other scopes to be finished in order to be complete. In this case, complete as much as logically possible in this scope and then move onto the parts of the other scope that need to get done.</p>

<p><img class="center" src="/images/projectplanmine.png"></p>

<p>So this is how I divided my application into scopes. What do you think about this methodology? While you&rsquo;re at it, tell us what you think of the mockups above. By the next article, I will have finished the <em>Course Management</em> scope, and will keep you posted on my progress. It will also be the first time I show code on this blog.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Pencil it In Part 2: Inspiration and Initial Approach]]></title>
    <link href="http://aindurti.github.io/blog/2014/05/05/pencil-it-in-part-2-inspiration-and-initial-approach/"/>
    <updated>2014-05-05T19:03:25-07:00</updated>
    <id>http://aindurti.github.io/blog/2014/05/05/pencil-it-in-part-2-inspiration-and-initial-approach</id>
    <content type="html"><![CDATA[<p>In the previous article, we covered the problem I had faced regarding my options for lifestyle management. While the specific problem was purely one about organizing college classes, dinners, contacts, and assignments, the discussion provided in the previous post gives general cautions to be wary of when using any type of organizer. This post will further discuss the progress of development by looking at <em>iStudiez Pro</em> and <em>Google Now</em>, two of some of my main inspirations for this app. Furthermore, we will discuss my initial approach to designing a solution to this problem.</p>

<!-- more -->


<p>In my search for the correct app, I came across one MAC alternative. At least&hellip;sort of. It was <a href="https://itunes.apple.com/us/app/istudiez-pro/id402989379?mt=12">iStudiez Pro</a>, an in-depth, content-wealthy application that employs heavy use of forms, guises itself in a skeumorphic calendar-like interface, while it primarily functions as a content management system. Here is an app that does everything that I want, except it neither automatically generates my data, nor does it make content management digestible. Now those are huge exceptions, when looked at the number of times the student would access the app per day. For instance, take a look at a situation when the user would need to add some sections and exams.</p>

<br>


<p><img class="center" src="/images/istudiez_class_addition.png"></p>

<p><img class="center" src="/images/istudiez_exam_addition.png"></p>

<p>Here, there are so many fields the user is forced to fill and so many buttons to check and interpret. Even if a few of these could be alleviated or assumed, the experience would be better.</p>

<p><img class="center" src="/images/istudiez_course_addition.png"></p>

<p>Here is <b>another</b> instance in the application where the user has to yet again click something to arrive at another screen.</p>

<p>With all of these extra layers of action between the conception of the idea and the goal, the frustration of the user increases along with the number of extra layers. Therefore, while there is a great emphasis on the control and flexibility of your schedule, in the ideal application, there should be a greater tradeoff between the number of features provided and a seamless and smarter user experience.</p>

<p>Now comes my greatest source of inspiration, and that is Google Now. I think the entire idea of Google Now comes from the right ideal. Here is an assistant that gets out of my way and literally takes <strong>away</strong> navigation, all because it has made the effort to learn to use patterns and data to better serve the user. It brings to you the right information when you need it (such as by location), and nothing more. It collects data about your upcoming events from your email! It encourages simple gestures for its interactions, and provides the option to undo any particular action.</p>

<p><img class="center" src="/images/google_now_intel.png"></p>

<p>Google Now recognizes patterns of the locations you travel and the shows you your local weather even before you ask. Isn&rsquo;t that neat?</p>

<p><img class="center" src="/images/google_now_swipe.png"></p>

<p>Here is an example of the swipe affordance for dismissing a card.</p>

<p>What we learn from these lessons is that we need to focus on the details as well. The details include teaching gestures in a subtle fashion, reducing navigation efforts while making the content digestible, and gathering relevant data in pleasingly abstract ways.</p>

<h2>My Approach</h2>


<p>With all of this in mind, we come to my initial approach to creating a student organization app. It&rsquo;s easy to say that an app needs to be perfect, but to actually design off of that is quite challenging. I started off doing some sketches and writings about the app on paper. Note: What you see here was after a couple of iterations. Notice that there&rsquo;s more writing than actual drawing. I believe that simple sketching is fine for ideating initially, but once you&rsquo;ve gone through a couple of iterations, you should be able to express the reasons for decisions in your designs, clearly in words. This will also make you a more effective communicator to others on your team. I&rsquo;m going to leave you to decipher my egregious handrwriting in my designs, because my train of thought is fairly easy to follow.</p>

<p><img class="center" src="/images/hero_screen_1.jpg"></p>

<p><img class="center" src="/images/sub_screen_1.jpg"></p>

<p>So what do you think? Do you think any of the possible concerns are accurate? If so, how should I address them? Let&rsquo;s have a discussion in the comments section below. In the next article, if I don&rsquo;t do some more design iterations by then, we&rsquo;ll take a look at my higher fidelity mockups. In addition, at the end of the article, we&rsquo;ll discuss the recently popular development practice I&rsquo;ll be using for this project, managing product development with individual, vertically integrated scopes.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Pencil it In Part 1: The Problem]]></title>
    <link href="http://aindurti.github.io/blog/2014/04/28/pencil-it-in-the-clever-solution-to-to-do-lists/"/>
    <updated>2014-04-28T15:11:16-07:00</updated>
    <id>http://aindurti.github.io/blog/2014/04/28/pencil-it-in-the-clever-solution-to-to-do-lists</id>
    <content type="html"><![CDATA[<p>For the past few months, I've been designing an idea that's been percolating in my head. Sometimes ideas come serendipitously, in the way Roman Nurik <a href="https://medium.com/philosophy-logic/3a1721a6f716">came up</a> with Muzei, the elegant and inspiring solution to colorful Android home screen wallpapers. What I greatly admire about Roman's work is that he approaches very specific problems. Sometimes, this type of modular thinking is not only beneficial to the creator by targeting a specific market, but also for future developers who can leverage your progress to use in their own products.</p>




<!-- more -->




<p><span class="header2">The problem</span> emerged in the back of my mind this semester where at a certain point, I kept finding myself losing track of assignment deadlines, eventually having to email my professors for extensions. And when I forgot my TA's cell phone number, I felt almost hopeless on my General Chemistry homework. Almost as bad, I missed important meetings with co-workers, networking events, and dinners with friends.</p>




<p>I immediately began looking for solutions, initially looking separately for those in each type of situation I had. After trying a physical agenda that I kept losing or forgetting to take with me, I decided that the solution should <b>always</b> be with me. That subsequently led me to download a collection of to-do list apps, notably Wunderlist and Google Keep. After a week of using task management apps, I noticed that my productivity did <b>not</b> go up that much. In fact, not only was there barely an increase in the rate of completion of my assignments, there was a huge increase in the amount of stress I felt. This was because I spent so much time adding and removing items from my lists that I was being horribly inefficient during my study hours planning out the rest of my life. As for the stress, some of the mindless tasks I threw on the list to remember just ended up getting thrown on the back burner of my brain, piling on top of each other.</p>


<p>In general, Jeff Atwood&rsquo;s <a href="http://blog.codinghorror.com/todont/">post</a> sums up what I&rsquo;ve learned about lists.</p>

<p><blockquote><p>1. Lists give the illusion of progress.<br/>2. Lists give the illusion of accomplishment.<br/>3. Lists make you feel guilty for not achieving these things.<br/>4. Lists make you feel guilty for continually delaying certain items.<br/>5. Lists make you feel guilty for not doing things you don&rsquo;t want to be doing anyway.<br/>6. Lists make you prioritize the wrong things.<br/>7. Lists are inefficient. (Think of what you could be doing with all the time you spend maintaining your lists!)<br/>8. Lists suck the enjoyment out of activities, making most things feel like an obligation.<br/>9. Lists don&rsquo;t actually make you more organized long term.<br/>10. Lists can close you off to spontaneity and exploration of things you didn&rsquo;t plan for. (Let&rsquo;s face it, it&rsquo;s impossible to really plan some things in life.)</p></blockquote></p>

<br>


<p><img class="center" src="/images/wundlist.gif">
<img class="center" src="/images/keep.png"></p>

<p>However, remember that calendars can still be usable as parts of lists! In general, lists of fixed and time-sensitive events don't leave the student dwelling on them and are okay to use. There's still a lot of debate on whether they should be organized in any way, and even further, whether lists should not be used by everyone. So this was the realization that I came to from attempting to use to-do list apps, <b>using a generic list to organize the structure of assignments and schedules is a NO-NO.</b> Next comes contact management.</p>




<p>I'm a Google Contacts guy. I sync all my contacts to Google, and when I email a professor to ask a question, I expect his contact info to be saved in the cloud. Moreover, and this may sound really hopeful, but when I look for a professor's contact info in my contacts app, I expect all of his/her info to be automatically consolidated under one item. To me, this is the minimum to ask for in a contact manager, for instance, why don't mobile contact managers allow users to simply group contacts under different categories? To save you all the trouble of reading this, I found no contact manager that cut down my interaction and time spent enough to allow me to say they simplified my life.</p>




<p>Now don't get me wrong, some of these applications did give me a better sense of a possible solution that I'll get to in a future post. For instance, Contacts+ offers manual consolidation of duplicate contacts that I find to be very helpful in cutting my time spent choosing the correct method of reaching the other person. But where it cut down my time, somewhere else it dragged. For example, the onboarding flow in this app is painstakingly long, which has me log into all of my social accounts, turn on SMS, while swiping through screens I probably will never read, all to be greeted with dialogs giving me update information and requests to consolidate my data.</p>




<p>And as for the list apps, they also make certain tradeoffs. What Wunderlist does really well is it brings collaboration into to-do lists, which I found helpful. However, the same app gets very specific into the categories of lists the user can make, encouraging the user to spend all of their time dividing up their time into trivial tasks. While this reduces the amount of information the brain has to store, it brings me back to Atwood's point above, which is that lists give the illusion of accomplishment. Remember, lists are mainly good for time-sensitive items like calendar events or assignments.</p>




<p>So in summary, in my approach to this problem, I've been analyzing the psychology of any user while using lifestyle management applications. By putting myself in their shoes, I get way more insight into what the possible solutions to the problem are. Talking to a lot of other students about how they would better improve their organization also gives us problem-solvers that insight. I mean, one of them has to have some helpful insight right? In the next article, I'll talk about my initial approach to creating a solution and the inspiration I took from.</p>

]]></content>
  </entry>
  
</feed>
